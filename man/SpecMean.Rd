% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SpecMean.R
\name{SpecMean}
\alias{SpecMean}
\title{Compute Median Spectra and Process Clustered Data from a Data Cube}
\usage{
SpecMean(cluster_result)
}
\arguments{
\item{cluster_result}{A list containing:
\itemize{
  \item \code{original_cube}: A FITS object (or similar) representing the input data cube.
  \item \code{cluster_map}: A matrix or array indicating each pixel's cluster assignment.
  \item \code{axDat}, \code{header}, \code{cluster_snr}: Additional metadata (if available) from the clustering process.
}}
}
\value{
A list containing:
\describe{
  \item{\code{MeanSpec}}{A data frame with the median spectrum for each cluster (rows = clusters, columns = wavelength).}
  \item{\code{reshaped_cube}}{A 3D array containing the new cube with median spectra assigned to each pixel.}
  \item{\code{post_process_table}}{A data frame linking each pixel's original spectrum to its assigned cluster.}
}
}
\description{
This function processes the result of a clustering procedure to:
\enumerate{
  \item Compute the median spectrum for each cluster,
  \item Generate a new 3D array (or "cube") with the median spectrum assigned to each pixel, and
  \item Create a table linking each pixel's original spectrum to its assigned cluster.
}
}
\details{
**Steps performed by the function**:
\enumerate{
  \item Reads the input data cube (from \code{cluster_result$original_cube}) and the cluster map.
  \item Reshapes the data cube into a 2D matrix, aligning each pixel with its spectrum.
  \item Computes the median spectrum for each cluster by grouping pixels based on their cluster assignment.
  \item Creates a new 3D array where each pixel's spectrum is replaced by the median spectrum of its cluster.
  \item Generates a table linking each pixel's original spectrum to its assigned cluster.
}
}
\examples{
# Example clustering result (pseudo-code)
cluster_result <- list(
  original_cube = FITSio::readFITS("manga-11749-12701-LOGCUBE.fits"),
  cluster_map = some_cluster_map,
  axDat = some_axDat
)

# Run SpecMean
result <- SpecMean(cluster_result)

# Access outputs
median_specs       <- result$MeanSpec
median_spectrum_cube <- result$reshaped_cube
pixel_cluster_table  <- result$post_process_table

}
