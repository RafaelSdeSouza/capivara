% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cube_cluster.R
\name{cube_cluster}
\alias{cube_cluster}
\title{Cluster a 2D Representation of a Data Cube}
\usage{
cube_cluster(input, Ncomp = 5, redshift = 0, scale_fn = median_scale)
}
\arguments{
\item{scale_fn}{A function used to scale each row of \code{cube_data}. Defaults to
\code{\link[base]{scale}}. If you have a custom scaling function, pass it here.}

\item{cube_data}{A numeric matrix representing the 2D flattened data cube.
Each row typically corresponds to a spatial pixel, and each column represents
a spectral variable (e.g., wavelength).}

\item{n_rows}{Integer, the number of rows in the original cube’s spatial dimension.}

\item{n_cols}{Integer, the number of columns in the original cube’s spatial dimension.}

\item{n_clusters}{Integer, the number of clusters to form.}
}
\value{
A \code{n_rows x n_cols} matrix of cluster assignments (integers), where each
  element corresponds to a spatial pixel in the original cube layout.
}
\description{
This function takes a 2D representation of a data cube (such as an IFU cube that has
been flattened into rows = spatial pixels and columns = spectral variables), scales
each row, computes pairwise distances using \code{\link{torch_dist}}, and then
performs hierarchical clustering. The resulting clusters are rearranged back
into a 2D grid consistent with the original spatial dimensions.
}
\details{
Steps performed by the function:
\enumerate{
  \item Applies the scaling function \code{scale_fn} to each row of \code{cube_data}.
  \item Computes Manhattan distances between rows using \code{\link{torch_dist}}.
  \item Performs hierarchical clustering with Ward's D2 method via \code{\link[fastcluster]{hclust}}.
  \item Cuts the resulting dendrogram into \code{n_clusters} clusters.
  \item Reshapes the cluster assignments into a \code{n_rows x n_cols} matrix, restoring
  the original spatial layout.
}

This process is often used in IFU data analysis, where clustering is applied to
grouped spectral profiles of spatial pixels to identify regions with similar
characteristics.
}
\examples{
if (torch::torch_is_installed()) {
  # Suppose we have a 10x10 spatial grid and a spectrum of length 50
  cube_data_example <- matrix(rnorm(10*10*50), nrow = 100, ncol = 50)
  cluster_map <- cube_cluster(
    cube_data = cube_data_example,
    n_rows = 10,
    n_cols = 10,
    n_clusters = 5,
    scale_fn = scale
  )
  dim(cluster_map) # Should be c(10, 10)
}

}
\seealso{
\code{\link{torch_dist}}, \code{\link[fastcluster]{hclust}}, \code{\link[stats]{cutree}}
}
