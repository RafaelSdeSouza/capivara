% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cube_cluster_with_snr.R
\name{cube_cluster_with_snr}
\alias{cube_cluster_with_snr}
\title{Cluster a 2D Representation of an IFU Cube Based on Target SNR}
\usage{
cube_cluster_with_snr(input, target_snr, redshift = 0, scale_fn = median_scale)
}
\arguments{
\item{input}{A 3D array representing the IFU data cube (dimensions: rows, columns, wavelengths).
Alternatively, this can be a `readFITS` object containing the data cube and its metadata.}

\item{target_snr}{Numeric. The desired signal-to-noise ratio (SNR) for the final bins.}

\item{redshift}{Numeric. The redshift value used for any wavelength corrections. Default is 0.}

\item{scale_fn}{A function to scale each spaxel spectrum. Defaults to `median_scale`,
which centers each spectrum by subtracting its median value.}

\item{sn_func}{A function to compute the signal-to-noise ratio for a group of spaxels.
Defaults to a standard implementation that sums the signal and noise across spaxels.}
}
\value{
A list containing:
\describe{
  \item{\code{cluster_map}}{A matrix of cluster assignments (dimensions: rows x columns).}
  \item{\code{header}}{The FITS header associated with the input data cube.}
  \item{\code{axDat}}{The axis metadata from the input data cube.}
}
}
\description{
This function takes an IFU data cube, computes the signal-to-noise ratio (SNR)
for each spaxel, and performs clustering using hierarchical methods to group
spaxels into regions with similar spectral properties, ensuring that the bins
achieve the desired target SNR.
}
\details{
Steps performed by the function:
\enumerate{
  \item Converts the 3D data cube into a 2D matrix where rows correspond to spatial pixels
        and columns to spectral channels.
  \item Calculates the signal (sum of flux across wavelengths) and noise (square root of the signal).
  \item Initializes bins starting from the spaxel with the highest SNR and iteratively
        adds neighboring spaxels until the target SNR is met for each bin.
  \item Performs hierarchical clustering with Ward's D2 method on the scaled spectral matrix.
  \item Reshapes the resulting cluster assignments into a 2D map consistent with the original
        spatial dimensions of the data cube.
}

This approach is suitable for analyzing IFU data to identify regions with
similar spectral characteristics while meeting SNR constraints for robust analysis.
}
\examples{
if (torch::torch_is_installed()) {
  # Read the FITS cube and cluster based on a target SNR
  fits_data <- FITSio::readFITS("example_cube.fits")
  result <- cube_cluster_with_snr(
    input = fits_data,
    target_snr = 50,
    redshift = 0,
    scale_fn = median_scale
  )
  cluster_map <- result$cluster_map
  dim(cluster_map) # Dimensions match the spatial size of the FITS cube
}

}
\seealso{
\code{\link[FITSio]{readFITS}}, \code{\link[fastcluster]{hclust}},
  \code{\link[stats]{cutree}}, \code{\link{median_scale}}
}
